@path
@output nabu.cms.core.types.components.user
@operationId nabu.cms.core.remember
@title Remember
@tags Nabu CMS Core
@ignoreOffline
## Will try to refresh the user session or remember the user identity

connectionId = application.configuration("nabu.cms.core.configuration")/connectionId

# we always build the oauth redirect links, even if you are logged in
# otherwise, when you log out, we can't properly show you the oauth2 options without roundtripping
oauth2 = structure()
for (oauth2Provider : nabu.utils.reflection.Node.listByType(type: "be.nabu.eai.module.authentication.oauth2.OAuth2Artifact")/nodes/id)
	if (nabu.web.application.Services.hasFragment(environment("webApplicationId"), oauth2Provider, active: true)/has)
		# check if you have a name for it
		oauth2Configuration = application.configuration(oauth2Provider + ".oauth2Configuration")
		name = when(oauth2Configuration/name != null, oauth2Configuration/name, oauth2Provider)
		oauth2 = oauth2 + structure(lambda(name): nabu.authentication.oauth2.server.Services.getRedirectLink(
			oauth2Provider, 
			environment("webApplicationId"), 
			"OFFLINE")/link)

if (!user.authenticated() && !user.refresh() && !user.remember())
	oauth2 = structure(
			oauth2: oauth2,
			realm: environment("realm"),
			roles: series("$guest"),
			actions: nabu.cms.core.database.action.selectByRoleName(connectionId, parameters: structure(roleName: "$guest"))/results/name,
			language: application.language()
		)
	
	# set the oauth redirects as result
	response.content(oauth2)
	response.code(401);
	abort();
# if it's a system account, it is not "logged in"
# it allows us to secure rest services for internal use (e.g. emails)
else if (nabu.utils.Token.isSystemToken(user.token())/response)
	response.code(401);
	abort();
else
	user = nabu.cms.core.services.user.getCurrent(connectionId: connectionId, mustExist: true)/user

	# if you selected a different language while logged out, lets update that in the database	
	@cookie
	language ?= null
	
	if (language != null)
		# it is possible that we get a language array if you have multiple cookies on different paths
		# however, this fails if we send it along and we need to pick one winner anyway...
		# we could at this point go to the database to check the preference that is stored?
		language = first(language)
		
		languageEntry = first(nabu.cms.core.database.masterdata.entry.selectByCategoryAndName(connectionId, parameters: structure(category: "language", name: language))/results)
		if (languageEntry != null)
			nabu.cms.core.database.node.updateLanguage(connectionId, parameters: series(structure(id: user/id, languageId: languageEntry/id)))
		# illegal choice
		else
			language = null

	# get the language according to the application logic
	if (language == null)
		language = application.language()
			
	response.content(structure(
			oauth2: oauth2,
			id: user/id,
			alias: user.token()/name,
			realm: user.token()/realm,
			roles: nabu.cms.core.database.user.selectGlobalRolesByAlias(connectionId, parameters: structure(alias: user.token()/name, realm: user.token()/realm))/results/name,
			actions: nabu.cms.core.database.user.selectGlobalActionsByAlias(connectionId, parameters: structure(alias: user.token()/name, realm: user.token()/realm))/results/name,
			potentialRoles: nabu.cms.core.database.user.selectPotentialRolesByAlias(connectionId, parameters: structure(alias: user.token()/name, realm: user.token()/realm))/results/name,
			potentialActions: nabu.cms.core.database.user.selectPotentialActionsByAlias(connectionId, parameters: structure(alias: user.token()/name, realm: user.token()/realm))/results/name,
			language: language
		))